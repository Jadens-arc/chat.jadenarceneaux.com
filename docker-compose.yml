services:

  express:
    image: node:latest
    container_name: express
    restart: always
    volumes:
      - ./server:/app
    working_dir: /app
    command: /bin/sh -c "npm install && npm run start"
    environment:
      - DATABASE_URL=postgres://postgres:password@postgres:5432/chatjadenarceneaux
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: chatjadenarceneaux
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
          test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
          interval: 5s
          timeout: 5s
          retries: 10
          start_period: 10s

  react:
    build: ./client
    container_name: react
    volumes:
      - react_dist:/app/dist
    networks:
      - app-network

  caddy:
    image: caddy:latest
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - react_dist:/srv
      - caddy_config:/config
    depends_on:
      - react
      - express
    networks:
      - app-network

volumes:
  postgres-data:
  react_dist:
  caddy_data:
  caddy_config:

networks:
  app-network:
    driver: bridge